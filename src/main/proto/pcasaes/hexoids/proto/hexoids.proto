syntax = "proto3";

package pcasaes.hexoids.proto;

option java_multiple_files = true;

option optimize_for = SPEED;

message FloatValue {
    float value = 1;
}

message GUID {
    bytes guid = 1;
}


message PlayerDto {
    GUID playerId = 1;
    int32 ship = 2;
    float x = 3;
    float y = 4;
    float angle = 5;
    bool spawned = 6;
    string name = 7;
}

message BarrierDto {
    float x = 1;
    float y = 2;
    float angle = 3;
}

enum ClientPlatforms {
    UNKNOWN = 0;
    HTML5 = 1;
    OSX = 2;
    WINDOWS = 3;
    X11 = 4;
}

// events

message BoltExhaustedEventDto {
    GUID boltId = 1;
    GUID ownerPlayerId = 2;
    int64 timestamp = 3;
}

message BoltFiredEventDto {
    GUID boltId = 1;
    GUID ownerPlayerId = 2;
    float x = 3;
    float y = 4;
    float angle = 5;
    int64 startTimestamp = 6;
    float speed = 7;
    int32 ttl = 8;
}

message BoltDivertedEventDto {
    GUID boltId = 1;
    float x = 2;
    float y = 3;
    float angle = 4;
    int64 divertTimestamp = 5;
    float speed = 6;
}

message PlayerDestroyedEventDto {
    GUID playerId = 1;
    GUID destroyedByPlayerId = 2;
    int64 destroyedTimestamp = 3;
}

message PlayerJoinedEventDto {
    GUID playerId = 1;
    int32 ship = 2;
    string name = 3;
    ClientPlatforms clientPlatform = 4;
}

message PlayerLeftEventDto {
    GUID playerId = 1;
}

message PlayerMovedEventDto {
    GUID playerId = 1;
    float x = 2;
    float y = 3;
    float angle = 4;
    float thrustAngle = 5;
    int64 timestamp = 6;
    float velocity = 7;
}

message PlayerSpawnedEventDto {
    PlayerMovedEventDto location = 1;
}

message PlayerScoreIncreasedEventDto {
    GUID playerId = 1;
    int32 gained = 2;
    int64 timestamp = 3;
}

message PlayerScoreUpdatedEventDto {
    GUID playerId = 1;
    int32 score = 2;
}

message ScoreEntry {
    GUID playerId = 1;
    int32 score = 2;
}

message ScoreBoardUpdatedEventDto {
    repeated ScoreEntry scores = 1;
}

message MassCollapsedIntoBlackHoleEventDto {
    GUID id = 1;
    float x = 2;
    float y = 3;
    int64 startTimestamp = 4;
    int64 endTimestamp = 5;
}


message Event {
    oneof event {
        BoltExhaustedEventDto boltExhausted = 1;
        BoltFiredEventDto boltFired = 2;
        BoltFiredEventDto playerFired = 3;
        PlayerDestroyedEventDto playerDestroyed = 4;
        PlayerJoinedEventDto playerJoined = 5;
        PlayerLeftEventDto playerLeft = 6;
        PlayerMovedEventDto playerMoved = 7;
        PlayerSpawnedEventDto playerSpawned = 8;
        PlayerScoreIncreasedEventDto playerScoreIncreased = 9;
        PlayerScoreUpdatedEventDto playerScoreUpdated = 10;
        ScoreBoardUpdatedEventDto scoreBoardUpdated = 11;
        MassCollapsedIntoBlackHoleEventDto massCollapsedIntoBlackHole = 12;
        BoltDivertedEventDto boltDiverted = 13;
    }
}

message Events {
    repeated Event events = 1;
}

// client to server commands

message MoveCommandDto {
    float moveX = 1;
    float moveY = 2;
    FloatValue angle = 3;
}

message FireBoltCommandDto {

}

message SpawnCommandDto {

}

message JoinCommandDto {
    string name = 1;
    ClientPlatforms clientPlatform = 2;
}

message RequestCommand {
    oneof command {
        MoveCommandDto move = 1;
        FireBoltCommandDto fire = 2;
        SpawnCommandDto spawn = 3;
        JoinCommandDto join = 4;
    }
}

// server to client commands

message CurrentViewCommandDto {
    repeated PlayerDto players = 1;
    BoltsAvailableCommandDto boltsAvailable = 2;
    repeated BarrierDto barriers = 3;
    MassCollapsedIntoBlackHoleEventDto blackhole = 4;
}

message PlayerScoreUpdateCommandDto {
    int64 score = 1;
}

message LiveBoltListCommandDto {
    repeated BoltFiredEventDto bolts = 1;
}

message BoltsAvailableCommandDto {
    int32 available = 1;
}

message DirectedCommand {
    GUID playerId = 1;
    oneof command {
        CurrentViewCommandDto currentView = 2;
        PlayerScoreUpdateCommandDto playerScoreUpdate = 3;
        LiveBoltListCommandDto liveBoltsList = 4;
        BoltsAvailableCommandDto boltsAvailable = 5;
    }
}

// dto

message Flush {
}

message ClockSync {
    int64 time = 1;
}

message Dto {
    oneof dto {
        DirectedCommand directedCommand = 1;
        Event event = 2;
        Events events = 3;
        Flush flush = 4;
        ClockSync clock = 5;
    }
}

